{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\Nuevo-Pro-Aseguramiento\\\\client\\\\src\\\\components\\\\utils\\\\subirimagen.js\";\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport Axios from 'axios';\n\nfunction FileUpload(props) {\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append(\"file\", files[0]); //save the Image we chose inside the Node Server \n\n    Axios.post('/api/product/uploadImage', formData, config).then(response => {\n      if (response.data.success) {\n        setImages([...Images, response.data.image]);\n        props.refreshFunction([...Images, response.data.image]);\n      } else {\n        alert('Failed to save the Image in Server');\n      }\n    });\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 800000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: '200px',\n      height: '150px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), console.log('getRootProps', { ...getRootProps()\n  }), console.log('getInputProps', { ...getInputProps()\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"btn-floating btn-large waves-effect waves-light red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"large material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 88\n    }\n  }, \"add_to_photos\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '200px',\n      height: '150px',\n      overflowX: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, Images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => onDelete(image),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      minWidth: '180px',\n      width: '180px',\n      height: '130px'\n    },\n    src: `http://localhost:5000/${image}`,\n    alt: `productImg-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/usuario/Desktop/Nuevo-Pro-Aseguramiento/client/src/components/utils/subirimagen.js"],"names":["React","useState","Dropzone","Icon","Axios","FileUpload","props","Images","setImages","onDrop","files","formData","FormData","config","header","append","post","then","response","data","success","image","refreshFunction","alert","onDelete","currentIndex","indexOf","newImages","splice","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","console","log","overflowX","map","index","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport Axios from 'axios';\nfunction FileUpload(props) {\n\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        formData.append(\"file\", files[0])\n        //save the Image we chose inside the Node Server \n        Axios.post('/api/product/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n\n                    setImages([...Images, response.data.image])\n                    props.refreshFunction([...Images, response.data.image])\n\n                } else {\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n\n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n    return (\n\n        \n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            \n            <Dropzone\n                onDrop={onDrop}\n                multiple={false}\n                maxSize={800000000}\n            >\n                \n                {({ getRootProps, getInputProps }) => (\n                    <div style={{\n                        width: '200px', height: '150px', border: '1px solid lightgray',\n                        display: 'flex', alignItems: 'center', justifyContent: 'center'\n                    }}\n                        {...getRootProps()}\n                    >\n                        {console.log('getRootProps', { ...getRootProps() })}\n                        {console.log('getInputProps', { ...getInputProps() })}\n                        <input {...getInputProps()} />\n                        <a class=\"btn-floating btn-large waves-effect waves-light red\"><i class=\"large material-icons\">add_to_photos</i></a>\n\n                    </div>\n                )}\n            </Dropzone>\n\n            <div style={{ display: 'flex', width: '200px', height: '150px', overflowX: 'scroll' }}>\n\n                {Images.map((image, index) => (\n                    <div onClick={() => onDelete(image)}>\n                        <img style={{ minWidth: '180px', width: '180px', height: '130px' }} src={`http://localhost:5000/${image}`} alt={`productImg-${index}`} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default FileUpload\n"]},"metadata":{},"sourceType":"module"}