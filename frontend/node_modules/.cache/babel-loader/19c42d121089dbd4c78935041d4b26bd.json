{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART_USER, GET_CART_ITEMS_USER, REMOVE_CART_ITEM_USER, ON_SUCCESS_BUY_USER } from './types';\nimport { USER_backend } from '../components/Config.js';\nexport function registerUser(dataToSubmit) {\n  const request = axios.post(`${USER_backend}/register`, dataToSubmit).then(response => response.data);\n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport function loginUser(dataToSubmit) {\n  const request = axios.post(`${USER_backend}/login`, dataToSubmit).then(response => response.data);\n  return {\n    type: LOGIN_USER,\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get(`${USER_backend}/auth`).then(response => response.data);\n  return {\n    type: AUTH_USER,\n    payload: request\n  };\n}\nexport function logoutUser() {\n  const request = axios.get(`${USER_backend}/logout`).then(response => response.data);\n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}\nexport function addToCart(_id) {\n  const request = axios.get(`${USER_backend}/addToCart?productId=${_id}`).then(response => response.data);\n  return {\n    type: ADD_TO_CART_USER,\n    payload: request\n  };\n}\nexport function getCartItems(cartItems, userCart) {\n  const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`).then(response => {\n    //Make CartDetail inside Redux Store \n    // We need to add quantity data to Product Information that come from Product Collection. \n    userCart.forEach(cartItem => {\n      response.data.forEach((productDetail, i) => {\n        if (cartItem.id === productDetail._id) {\n          response.data[i].quantity = cartItem.quantity;\n        }\n      });\n    });\n    return response.data;\n  });\n  return {\n    type: GET_CART_ITEMS_USER,\n    payload: request\n  };\n}\nexport function removeCartItem(id) {\n  const request = axios.get(`/api/users/removeFromCart?_id=${id}`).then(response => {\n    response.data.cart.forEach(item => {\n      response.data.cartDetail.forEach((k, i) => {\n        if (item.id === k._id) {\n          response.data.cartDetail[i].quantity = item.quantity;\n        }\n      });\n    });\n    return response.data;\n  });\n  return {\n    type: REMOVE_CART_ITEM_USER,\n    payload: request\n  };\n}\nexport function onSuccessBuy(data) {\n  const request = axios.post(`${USER_backend}/successBuy`, data).then(response => response.data);\n  return {\n    type: ON_SUCCESS_BUY_USER,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/usuario/Desktop/Nuevo-Pro-Aseguramiento/frontend/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","REMOVE_CART_ITEM_USER","ON_SUCCESS_BUY_USER","USER_backend","registerUser","dataToSubmit","request","post","then","response","data","type","payload","loginUser","auth","get","logoutUser","addToCart","_id","getCartItems","cartItems","userCart","forEach","cartItem","productDetail","i","id","quantity","removeCartItem","cart","item","cartDetail","k","onSuccessBuy"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER,\n    ON_SUCCESS_BUY_USER\n} from './types';\nimport { USER_backend } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post(`${USER_backend}/register`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post(`${USER_backend}/login`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get(`${USER_backend}/auth`)\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser() {\n    const request = axios.get(`${USER_backend}/logout`)\n        .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n\nexport function addToCart(_id) {\n    const request = axios.get(`${USER_backend}/addToCart?productId=${_id}`)\n        .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART_USER,\n        payload: request\n    }\n}\n\n\n\nexport function getCartItems(cartItems, userCart) {\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n        .then(response => {\n\n\n            //Make CartDetail inside Redux Store \n            // We need to add quantity data to Product Information that come from Product Collection. \n\n            userCart.forEach(cartItem => {\n                response.data.forEach((productDetail, i) => {\n                    if (cartItem.id === productDetail._id) {\n                        response.data[i].quantity = cartItem.quantity;\n                    }\n                })\n            })\n\n            return response.data;\n        });\n\n    return {\n        type: GET_CART_ITEMS_USER,\n        payload: request\n    }\n}\n\n\n\n\nexport function removeCartItem(id) {\n    const request = axios.get(`/api/users/removeFromCart?_id=${id}`)\n        .then(response => {\n\n            response.data.cart.forEach(item => {\n                response.data.cartDetail.forEach((k, i) => {\n                    if (item.id === k._id) {\n                        response.data.cartDetail[i].quantity = item.quantity\n                    }\n                })\n            })\n            return response.data;\n        });\n\n    return {\n        type: REMOVE_CART_ITEM_USER,\n        payload: request\n    }\n}\n\n\nexport function onSuccessBuy(data) {\n\n    const request = axios.post(`${USER_backend}/successBuy`, data)\n        .then(response => response.data);\n\n    return {\n        type: ON_SUCCESS_BUY_USER,\n        payload: request\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}